/* COLORS */
/* GRID */
@keyframes moveInRight {
  0% {
    opacity: 0.5;
    transform: translateX(-12rem); }
  50% {
    transform: translateX(1rem); }
  100% {
    opacity: 1;
    transform: translateX(0); } }

@keyframes moveInLeft {
  0% {
    opacity: 0.5;
    transform: translateX(12rem); }
  50% {
    transform: translateX(-1rem); }
  100% {
    opacity: 1;
    transform: translateX(0); } }

@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(3rem);
    /* translateY goes positive when we move down*/ }
  100% {
    opacity: 1;
    transform: translateY(0); } }

html {
  /* font-size: 10px; we have to avoid using px here, since we are overwriting browser's actual font size, and we don't want that */
  /* Reason?: some people have bad eye sight, so they manually change the font size of browser */
  /* THe browser 100% font-size is equal to 16%*/
  /* font-size: 100%; 16px */
  font-size: 62.5%;
  /* 10px  */
  /* I have put font-size in base because it defines the base definition of rem */ }

*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  box-sizing: inherit;
  /* Box sizing property is not inherited by itself, so by using this, we inherit it */ }

body {
  box-sizing: border-box; }

body {
  font-family: "Lato";
  font-weight: 400;
  color: #777;
  padding: 3rem;
  line-height: 1.7; }

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  text-align: center;
  backface-visibility: hidden;
  /* It stops the animation from moving up */ }
  .heading-primary--main {
    display: block;
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;
    animation-name: moveInRight;
    animation-duration: 1s;
    animation-timing-function: ease-out;
    /* It will come out faster first and then slow down */
    /*
    animation-delay: 3s; // waits for 3 seconds then animates
    animation-iteration-count: 3; // animates thrice 
    */ }
  .heading-primary--sub {
    display: block;
    font-size: 1.8rem;
    font-weight: 700;
    letter-spacing: 1.76rem;
    animation: moveInLeft 1s ease-out; }

.heading-secondary {
  font-size: 3.5rem;
  text-transform: uppercase;
  letter-spacing: 0.12rem;
  font-weight: 700;
  background-image: linear-gradient(to right, #7ed56f, #28b485);
  display: inline-block;
  -webkit-background-clip: text;
  color: transparent;
  transition: all 0.2s; }
  .heading-secondary:hover {
    cursor: pointer;
    transform: skewY(2deg) skewX(15deg);
    text-shadow: 0.5rem 1rem 2rem rgba(0, 0, 0, 0.2); }

.u-center-text {
  text-align: center; }

.u-margin-bottom-8 {
  margin-bottom: 0.8rem; }

.header {
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url("../img/hero.jpg");
  background-size: cover;
  background-position: top;
  width: 100%;
  height: 95vh;
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%); }
  .header__logo-box {
    position: absolute;
    top: 4rem;
    left: 4rem; }
  .header__logo {
    height: 3rem; }
  .header__text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%); }

.row {
  width: 114rem;
  margin: 0 auto; }
  .row::after {
    content: "";
    display: table;
    clear: both; }
  .row:not(:last-child) {
    margin-bottom: 6rem; }
  .row [class^="col-1"] {
    float: left; }
    .row [class^="col-1"]:not(:last-child) {
      margin-right: 6rem; }
  .row .col-1-of-2 {
    width: calc((100% - 6rem) / 2); }

.btn:link, .btn:visited {
  text-decoration: none;
  font-size: 1.6rem;
  padding: 1.5rem 4rem;
  display: inline-block;
  border-radius: 10rem;
  margin-top: 6rem;
  transition: all 0.2s;
  position: relative;
  /* We put this because we need to give reference to position: absolute in btn::after*/ }

.btn--white {
  background-color: #fff;
  color: #777; }
  .btn--white::after {
    background-color: #fff;
    color: #777; }

.btn:hover {
  transform: translateY(-0.3rem);
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2); }
  .btn:hover::after {
    transform: scaleX(1.6) scaleY(1.3);
    opacity: 0; }

.btn:active {
  transform: translateY(-0.1rem);
  box-shadow: 0 1rem 1rem rgba(0, 0, 0, 0.2); }

.btn::after {
  /* It will be copy of the button but it will be taken as a child of button */
  content: "";
  display: inline-block;
  width: 100%;
  /* 100% height and width of btn */
  height: 100%;
  border-radius: 10rem;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  transition: all 0.2s; }

.btn--animated {
  animation: moveInBottom 0.5s ease-out 0.75s;
  /* Animation fill mode applies styles of 0% to element before the animation starts */
  animation-fill-mode: backwards; }

.section-about {
  background-color: #f7f7f7;
  padding: 25rem 0;
  margin-top: -20vh; }
